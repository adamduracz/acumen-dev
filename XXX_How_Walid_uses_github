Walid's simple interface to GIThub :-)

by Kevin Atkinson

---------------------------------------------------------------------

Summary:  ADD, COMMIT, PULL, then PUSH, in that order!

---------------------------------------------------------------------

Repositories:

The different reps out there:
   - The mother rep:  effective-modeling/devel
     Not really active, but it's there.  You can ignore it.
   - The active rep:  acumen-e/devel-e
     That's the one that everyone is working on right now
   - Your clone of the rep:  That's the one on your machine

---------------------------------------------------------------------

ADD

In general, it's a good thing to check the status of your clone
before doing anything with the rep.  That is done by typing:

  git status

Then, to stage the changes in your clone so that they can be committed
to your shared rep on gitfhub, you execute the following command:

  git add -u ./

If you have added new files that you'd like to put in the rep, then 
you need to add them one by one, as follows:

  git add FILE

If you have a new directory with some files in it, clean it up and
make sure it only contains things that you want to committ, and then
you can say

  git add directory-name

Do a "git status" again.  Any files you changes will be under "Changed
but not updated", you should add those also assuming they are part of
the updated arithmetic operators.  Everything that is to be committed
should be under "Changes to be committed".  Make sure anything under
another category is something you don't want to add.

---------------------------------------------------------------------

COMMIT

What you just did is known as "staging" the changes. Now you can
commit them.  Just use:

  git commit

and hopefully the emacs editor will come up.  Please type a useful
commit message describing your changes.  As an innocent suggestion,
since you don't have a working spell checker, maybe you can type the
message in an editor that does spellcheck and copy and paste them into
emacs.  (Just reformat them using ESC q).

Now see you changes by doing a:

  git log --stat

which should show you commit.

---------------------------------------------------------------------

PULL

If you need to get the latest version, just do this:

  git pull

After doing a PULL, make sure the word "conflict" did not appear in
the output of that operation.  If there is a conflict, talk to Kevin
right away!  If there is no conflict, do "git status" and make sure
there are no "C"onflict markers.

---------------------------------------------------------------------

PUSH

Once that is done do a:

  git push

And let me know when that done and I will review the changes, and if
there is a problem I will let you know.  If not I will merge them into
acumen-e/devel-e.

---------------------------------------------------------------------
