// created by Anita Sant'Anna
// This example models an electric motor controlled by a PI controller

// simple RL circuit to which the motor is connected,
// the current in the circuit is defined by:
// i'=(v - e - R*i)/L;
// where:
// i: current
// v: input voltage to the circuit, this may be controlled by a 
//    pulse width modulator
// e: electromotive force of the motor
// R: resistance
// L: inductance
class RLcircuit(R,L)
  private i:=0; i':=0; v:=0; e:=0; end
  i'=(v - e - R*i)/L;
end

// model of the electric motor
// wm'=(kT*i - TL)/Jeq;
// e=wm*kE;
// where:
// e: electromotive force (EMF) of the motor
// wm: angular velocity of the motor
// kT: coefficient relating current and torque
// kE: coefficient relating angular velocity and EMF
// Jeq: equivalent inertial, combination of load inertia and motor inertia
// TL: load torque
class ElectricMotor(Jeq,kE,kT,TL)
  private i:=0; wm:=0; wm':=0; e:=0; end
  wm'=(kT*i - TL)/Jeq;
  e=wm*kE;
end

// PI controller in the current loop
// this controller tried to make the current in the circuit follow the 
// pattern defined by h
// the model of the controller is:
// v=kPWM*(kP*(h-i)+kI*(int_h-int_i));
// where:
// v: voltage delivered to circuit
// kPWM: coefficient related to pulse width modulator
// kP: proportional coefficient
// kI: integral coefficient
// i: current in the circuit
// h: desired current profile
class PIcontroller(kP,kI,kPWM)
  private h:=0; int_h:=0; int_h':=0; i:=0; int_i:=0; int_i':=0; v:=0; end
  int_i'=i;
  int_h'=h;
  v=kPWM*(kP*(h-i)+kI*(int_h-int_i));
end

class Main(simulator)
  private
    motor := create ElectricMotor(0.0002,0.1,0.1,0);
    circuit := create RLcircuit(4,2);
    controller := create PIcontroller(50,100,6);
    mode := 1; t:=0; t':=1;
  end
  t'=1;
  // linking the different classes
  controller.i=circuit.i;
  circuit.v=controller.v;
  circuit.e=motor.e;
  motor.i=circuit.i;
  // simulator parameters
  simulator.timeStep=0.001;
  simulator.endTime=1;

  // creating h as a square wave
  // h=10 between 0.1 and 0.2 seconds, h=0 elsewhere
  switch mode
    case 1
    controller.h=0;
    if t>=0.1 mode:=2; end

    case 2
    controller.h=10;
    if t>=0.2 mode:=3; end

    case 3
    controller.h=0;
  end
end

