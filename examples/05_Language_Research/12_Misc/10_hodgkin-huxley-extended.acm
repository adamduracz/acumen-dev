/* 
   Works with semantic 2014
   Works with semantic 2013
   Works with semantic 2012
*/

// Hudgkin-Huxley Model for neurons
// Radu Grosu + EMG

class Example1()
  private x := 1; x' := 0 end
  x' = -x;
end

class Example2(x10, x20, a,b)
  private 
    x := x10; x' := 0; 
    //x1 := x10; x1' := 0; 
    //x2 := x20; x2' := 0;
    //c := 0;
  end
  x' = a * x - b * (1-x);
  // x1' = -a * x1 + b * x2;
  // x2' =  a * x1 - b * x2;
  // c   =      x1 +     x2;
end

class Example3(a1,b1,a2,b2)
  private
    m := create Example2 (1,0,a1,b1);
    h := create Example2 (0,1,a2,b2);
    V   := 0; V' := 0;
    Ina := 0;
    Ik  := 0;
    Il  := 0;
    gna := 1 ;
    gl  := 1 ;
    C   := 1 ;
    o   := 0;
    Vna := 0;
    Vl  := 0;
  end
  V'  = Ina + Ik +Il;
  Ina = gna * (m.x^3)*(h.x)*(V-Vna); 
  Il  = gl * (V-Vl);
  o = ((1-m.x) ^3) * (1-h.x);
end

// Pulse generating example, EMG + Radu Grosu
// Part of the model for a sodium channel
class Example4 ()
  private
    a1   := 11.27; 
    a2   := 0.047; 
    b1   := 10*3.78;
    b2   := 50.97;
    o    := 0; // Observation
    mode := "Init"
  end
  if mode == "Init"
     create Example3(a1,b1,a2,b2);
     mode := ""
  end
end

class Main (simulator)
  private a := create Example4 () end
  simulator.endTime = 0.5;
  simulator.timeStep = 0.001
end